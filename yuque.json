[
  {
    "id": 1359661,
    "slug": "zqogcg",
    "title": "call,apply,bind的区别",
    "book_id": 232944,
    "book": {
      "id": 232944,
      "type": "Book",
      "slug": "gists",
      "name": "web代码片段",
      "user_id": 285760,
      "description": "前端开发中的代码片段分享",
      "creator_id": 285760,
      "public": 1,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-03-12T07:56:31.925Z",
      "updated_at": "2019-03-12T07:56:31.000Z",
      "created_at": "2019-03-09T05:10:11.000Z",
      "namespace": "nooldey/gists",
      "user": {
        "id": 285760,
        "type": "User",
        "login": "nooldey",
        "name": "nooldey",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 3,
        "public_books_count": 2,
        "followers_count": 1,
        "following_count": 1,
        "created_at": "2019-03-09T04:49:17.000Z",
        "updated_at": "2019-03-09T05:55:10.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 285760,
    "creator": {
      "id": 285760,
      "type": "User",
      "login": "nooldey",
      "name": "nooldey",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 3,
      "public_books_count": 2,
      "followers_count": 1,
      "following_count": 1,
      "created_at": "2019-03-09T04:49:17.000Z",
      "updated_at": "2019-03-09T05:55:10.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "\n```\nfoo.call(this, arg1,arg2,arg3) == foo.apply(this, arguments)==this.foo(arg1, arg2, arg3)\n```\n\n",
    "body_draft": "",
    "body_html": "<p><br /></p><pre><code>foo.call(this, arg1,arg2,arg3) == foo.apply(this, arguments)==this.foo(arg1, arg2, arg3)</code></pre><p><br /></p>",
    "body_lake": "<!doctype lake><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22foo.call(this%2C%20arg1%2Carg2%2Carg3)%20%3D%3D%20foo.apply(this%2C%20arguments)%3D%3Dthis.foo(arg1%2C%20arg2%2C%20arg3)%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-12T07:56:31.000Z",
    "deleted_at": null,
    "created_at": "2019-03-12T07:55:51.000Z",
    "updated_at": "2019-03-12T07:56:31.000Z",
    "published_at": "2019-03-12T07:56:31.000Z",
    "first_published_at": "2019-03-12T07:56:31.000Z",
    "word_count": 16,
    "cover": "",
    "description": "foo.call(this, arg1,arg2,arg3) == foo.apply(this, arguments)==this.foo(arg1, arg2, arg3)",
    "custom_description": "foo.call(this, arg1,arg2,arg3) == foo.apply(this, arguments)==this.foo(arg1, arg2, arg3)",
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1359660,
    "slug": "ryeig9",
    "title": "无标题",
    "book_id": 232944,
    "book": {
      "id": 232944,
      "type": "Book",
      "slug": "gists",
      "name": "web代码片段",
      "user_id": 285760,
      "description": "前端开发中的代码片段分享",
      "creator_id": 285760,
      "public": 1,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-03-12T07:56:31.925Z",
      "updated_at": "2019-03-12T07:56:31.000Z",
      "created_at": "2019-03-09T05:10:11.000Z",
      "namespace": "nooldey/gists",
      "user": {
        "id": 285760,
        "type": "User",
        "login": "nooldey",
        "name": "nooldey",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 3,
        "public_books_count": 2,
        "followers_count": 1,
        "following_count": 1,
        "created_at": "2019-03-09T04:49:17.000Z",
        "updated_at": "2019-03-09T05:55:10.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 285760,
    "creator": {
      "id": 285760,
      "type": "User",
      "login": "nooldey",
      "name": "nooldey",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 3,
      "public_books_count": 2,
      "followers_count": 1,
      "following_count": 1,
      "created_at": "2019-03-09T04:49:17.000Z",
      "updated_at": "2019-03-09T05:55:10.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "",
    "body_draft": "",
    "body_html": "",
    "body_lake": "",
    "public": 1,
    "status": 0,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-12T07:55:39.000Z",
    "deleted_at": null,
    "created_at": "2019-03-12T07:55:38.000Z",
    "updated_at": "2019-03-12T07:55:39.000Z",
    "published_at": null,
    "first_published_at": null,
    "word_count": 0,
    "cover": null,
    "description": "",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1353000,
    "slug": "remove-chrome-input",
    "title": "移除chrome自动填写时的背景色",
    "book_id": 232944,
    "book": {
      "id": 232944,
      "type": "Book",
      "slug": "gists",
      "name": "web代码片段",
      "user_id": 285760,
      "description": "前端开发中的代码片段分享",
      "creator_id": 285760,
      "public": 1,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-03-12T07:56:31.925Z",
      "updated_at": "2019-03-12T07:56:31.000Z",
      "created_at": "2019-03-09T05:10:11.000Z",
      "namespace": "nooldey/gists",
      "user": {
        "id": 285760,
        "type": "User",
        "login": "nooldey",
        "name": "nooldey",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 3,
        "public_books_count": 2,
        "followers_count": 1,
        "following_count": 1,
        "created_at": "2019-03-09T04:49:17.000Z",
        "updated_at": "2019-03-09T05:55:10.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 285760,
    "creator": {
      "id": 285760,
      "type": "User",
      "login": "nooldey",
      "name": "nooldey",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 3,
      "public_books_count": 2,
      "followers_count": 1,
      "following_count": 1,
      "created_at": "2019-03-09T04:49:17.000Z",
      "updated_at": "2019-03-09T05:55:10.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "chrome 的自动填写会导致输入框的背景颜色变化，不符合设计稿，可修复如下：\n\n```css\n/* 移除浏览器自动填写导致的输入框背景色 */\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill,\ninput:-webkit-autofill:focus,\ntextarea:-webkit-autofill:focus,\nselect:-webkit-autofill:focus {\n  box-shadow: 0 0 0 1000px white inset;\n  -webkit-box-shadow: 0 0 0 1000px white inset;\n}\n```\n\n\n",
    "body_draft": "",
    "body_html": "<p>chrome 的自动填写会导致输入框的背景颜色变化，不符合设计稿，可修复如下：</p><p><br /></p><pre data-lang=\"css\"><code>/* 移除浏览器自动填写导致的输入框背景色 */\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill,\ninput:-webkit-autofill:focus,\ntextarea:-webkit-autofill:focus,\nselect:-webkit-autofill:focus {\n  box-shadow: 0 0 0 1000px white inset;\n  -webkit-box-shadow: 0 0 0 1000px white inset;\n}</code></pre><p><br /></p><p><br /></p>",
    "body_lake": "<!doctype lake><p>chrome 的自动填写会导致输入框的背景颜色变化，不符合设计稿，可修复如下：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22css%22%2C%22code%22%3A%22%2F*%20%E7%A7%BB%E9%99%A4%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99%E5%AF%BC%E8%87%B4%E7%9A%84%E8%BE%93%E5%85%A5%E6%A1%86%E8%83%8C%E6%99%AF%E8%89%B2%20*%2F%5Cninput%3A-webkit-autofill%2C%5Cntextarea%3A-webkit-autofill%2C%5Cnselect%3A-webkit-autofill%2C%5Cninput%3A-webkit-autofill%3Afocus%2C%5Cntextarea%3A-webkit-autofill%3Afocus%2C%5Cnselect%3A-webkit-autofill%3Afocus%20%7B%5Cn%20%20box-shadow%3A%200%200%200%201000px%20white%20inset%3B%5Cn%20%20-webkit-box-shadow%3A%200%200%200%201000px%20white%20inset%3B%5Cn%7D%22%7D\"></card><p><br /><cursor /></p><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-11T07:09:21.000Z",
    "deleted_at": null,
    "created_at": "2019-03-11T07:05:27.000Z",
    "updated_at": "2019-03-11T07:10:42.000Z",
    "published_at": "2019-03-11T07:10:42.000Z",
    "first_published_at": "2019-03-11T07:09:21.000Z",
    "word_count": 86,
    "cover": "",
    "description": "chrome 的自动填写会导致输入框的背景颜色变化，不符合设计稿，可修复如下：/* 移除浏览器自动填写导致的输入框背景色 */ input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill, input:-...",
    "custom_description": "chrome 的自动填写会导致输入框的背景颜色变化，通过代码修复输入框展示背景色",
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1346479,
    "slug": "array",
    "title": "数组处理",
    "book_id": 232944,
    "book": {
      "id": 232944,
      "type": "Book",
      "slug": "gists",
      "name": "代码片段集锦",
      "user_id": 285760,
      "description": "前端开发中的代码片段分享",
      "creator_id": 285760,
      "public": 1,
      "items_count": 6,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-03-14T09:58:05.346Z",
      "updated_at": "2019-03-14T09:58:05.000Z",
      "created_at": "2019-03-09T05:10:11.000Z",
      "namespace": "nooldey/gists",
      "user": {
        "id": 285760,
        "type": "User",
        "login": "nooldey",
        "name": "nooldey",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 4,
        "public_books_count": 3,
        "followers_count": 1,
        "following_count": 1,
        "created_at": "2019-03-09T04:49:17.000Z",
        "updated_at": "2019-03-14T09:12:52.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 285760,
    "creator": {
      "id": 285760,
      "type": "User",
      "login": "nooldey",
      "name": "nooldey",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 4,
      "public_books_count": 3,
      "followers_count": 1,
      "following_count": 1,
      "created_at": "2019-03-09T04:49:17.000Z",
      "updated_at": "2019-03-14T09:12:52.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"381c019a\"></a>\n## **判断两个数组的包含关系，判断a是否包含b**\n```javascript\n/*\n * 判断两个数组的包含关系，判断a是否包含b\n * 期望输入： a=[1,2,3,5], b=[2,3]\n * 期望输出：布尔值Boolean\n*/\n\nconst compareArr = (a,b) => {\n    if (b.length > a.length) {\n        return false\n    }\n    return b.every(i => a.includes(i))\n}\n```\n\n\n<a name=\"da646e65\"></a>\n## 剔除数组中重复的元素\n\n```javascript\n/*\nEs6 快速去重\n*/\nfunction removeDupli(array){\n\treturn Array.from(new Set(array))\n}\n```\n\n```javascript\n/*\n    期望输入：[1,2,2,3,8,7,65,2]\n    期望输出：[1,2,3,8,7,65]\n*/\n\nvar str = [1,2,2,3,8,7,65,2];\nvar res = [];\nstr.forEach(s => {\n    if (!res.includes(s)) {\n        res.push(s)\n    }\n})\n\nconsole.log(res)\n```\n\n\n<a name=\"3f0364ce\"></a>\n## 从JSON或数组中提取数组\n```javascript\n/*\n    期望输入： 数组数据或json字符串(不确定是哪一个)\n    输出： 数组格式的数据\n*/\nconst pickArray = x => {\n    /* 从json或数组中提取数组，用于对象类型未知的情况 */\n    let res = []\n    if (Array.isArray(x)) {\n        res = x\n    } else if ((/\\[\\{/).test(x)) {\n        res = JSON.parse(x)\n    }\n    return res\n}\n```\n\n",
    "body_draft": "",
    "body_html": "<h2 id=\"381c019a\"><strong>判断两个数组的包含关系，判断a是否包含b</strong></h2><pre data-lang=\"javascript\"><code>/*\n * 判断两个数组的包含关系，判断a是否包含b\n * 期望输入： a=[1,2,3,5], b=[2,3]\n * 期望输出：布尔值Boolean\n*/\n\nconst compareArr = (a,b) =&gt; {\n    if (b.length &gt; a.length) {\n        return false\n    }\n    return b.every(i =&gt; a.includes(i))\n}</code></pre><p><br /></p><p><br /></p><h2 id=\"da646e65\">剔除数组中重复的元素</h2><p><br /></p><pre data-lang=\"javascript\"><code>/*\nEs6 快速去重\n*/\nfunction removeDupli(array){\n\treturn Array.from(new Set(array))\n}</code></pre><p><br /></p><pre data-lang=\"javascript\"><code>/*\n    期望输入：[1,2,2,3,8,7,65,2]\n    期望输出：[1,2,3,8,7,65]\n*/\n\nvar str = [1,2,2,3,8,7,65,2];\nvar res = [];\nstr.forEach(s =&gt; {\n    if (!res.includes(s)) {\n        res.push(s)\n    }\n})\n\nconsole.log(res)</code></pre><p><br /></p><p><br /></p><h2 id=\"3f0364ce\">从JSON或数组中提取数组</h2><pre data-lang=\"javascript\"><code>/*\n    期望输入： 数组数据或json字符串(不确定是哪一个)\n    输出： 数组格式的数据\n*/\nconst pickArray = x =&gt; {\n    /* 从json或数组中提取数组，用于对象类型未知的情况 */\n    let res = []\n    if (Array.isArray(x)) {\n        res = x\n    } else if ((/\\[\\{/).test(x)) {\n        res = JSON.parse(x)\n    }\n    return res\n}</code></pre><p><br /></p>",
    "body_lake": "<!doctype lake><h2 id=\"381c019a\"><strong>判断两个数组的包含关系，判断a是否包含b</strong></h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F*%5Cn%20*%20%E5%88%A4%E6%96%AD%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%8C%85%E5%90%AB%E5%85%B3%E7%B3%BB%EF%BC%8C%E5%88%A4%E6%96%ADa%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%ABb%5Cn%20*%20%E6%9C%9F%E6%9C%9B%E8%BE%93%E5%85%A5%EF%BC%9A%20a%3D%5B1%2C2%2C3%2C5%5D%2C%20b%3D%5B2%2C3%5D%5Cn%20*%20%E6%9C%9F%E6%9C%9B%E8%BE%93%E5%87%BA%EF%BC%9A%E5%B8%83%E5%B0%94%E5%80%BCBoolean%5Cn*%2F%5Cn%5Cnconst%20compareArr%20%3D%20(a%2Cb)%20%3D%3E%20%7B%5Cn%20%20%20%20if%20(b.length%20%3E%20a.length)%20%7B%5Cn%20%20%20%20%20%20%20%20return%20false%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20b.every(i%20%3D%3E%20a.includes(i))%5Cn%7D%22%7D\"></card><p><br /></p><p><br /></p><h2 id=\"da646e65\">剔除数组中重复的元素</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F*%5CnEs6%20%E5%BF%AB%E9%80%9F%E5%8E%BB%E9%87%8D%5Cn*%2F%5Cnfunction%20removeDupli(array)%7B%5Cn%5Ctreturn%20Array.from(new%20Set(array))%5Cn%7D%22%7D\"></card><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F*%5Cn%20%20%20%20%E6%9C%9F%E6%9C%9B%E8%BE%93%E5%85%A5%EF%BC%9A%5B1%2C2%2C2%2C3%2C8%2C7%2C65%2C2%5D%5Cn%20%20%20%20%E6%9C%9F%E6%9C%9B%E8%BE%93%E5%87%BA%EF%BC%9A%5B1%2C2%2C3%2C8%2C7%2C65%5D%5Cn*%2F%5Cn%5Cnvar%20str%20%3D%20%5B1%2C2%2C2%2C3%2C8%2C7%2C65%2C2%5D%3B%5Cnvar%20res%20%3D%20%5B%5D%3B%5Cnstr.forEach(s%20%3D%3E%20%7B%5Cn%20%20%20%20if%20(!res.includes(s))%20%7B%5Cn%20%20%20%20%20%20%20%20res.push(s)%5Cn%20%20%20%20%7D%5Cn%7D)%5Cn%5Cnconsole.log(res)%22%7D\"></card><p><br /></p><p><br /></p><h2 id=\"3f0364ce\">从JSON或数组中提取数组</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F*%5Cn%20%20%20%20%E6%9C%9F%E6%9C%9B%E8%BE%93%E5%85%A5%EF%BC%9A%20%E6%95%B0%E7%BB%84%E6%95%B0%E6%8D%AE%E6%88%96json%E5%AD%97%E7%AC%A6%E4%B8%B2(%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%98%AF%E5%93%AA%E4%B8%80%E4%B8%AA)%5Cn%20%20%20%20%E8%BE%93%E5%87%BA%EF%BC%9A%20%E6%95%B0%E7%BB%84%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%95%B0%E6%8D%AE%5Cn*%2F%5Cnconst%20pickArray%20%3D%20x%20%3D%3E%20%7B%5Cn%20%20%20%20%2F*%20%E4%BB%8Ejson%E6%88%96%E6%95%B0%E7%BB%84%E4%B8%AD%E6%8F%90%E5%8F%96%E6%95%B0%E7%BB%84%EF%BC%8C%E7%94%A8%E4%BA%8E%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B%E6%9C%AA%E7%9F%A5%E7%9A%84%E6%83%85%E5%86%B5%20*%2F%5Cn%20%20%20%20let%20res%20%3D%20%5B%5D%5Cn%20%20%20%20if%20(Array.isArray(x))%20%7B%5Cn%20%20%20%20%20%20%20%20res%20%3D%20x%5Cn%20%20%20%20%7D%20else%20if%20((%2F%5C%5C%5B%5C%5C%7B%2F).test(x))%20%7B%5Cn%20%20%20%20%20%20%20%20res%20%3D%20JSON.parse(x)%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20res%5Cn%7D%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 1,
    "comments_count": 0,
    "content_updated_at": "2019-03-14T08:32:35.000Z",
    "deleted_at": null,
    "created_at": "2019-03-09T05:18:30.000Z",
    "updated_at": "2019-03-14T08:32:35.000Z",
    "published_at": "2019-03-14T08:32:35.000Z",
    "first_published_at": "2019-03-09T05:21:32.000Z",
    "word_count": 244,
    "cover": "",
    "description": "判断两个数组的包含关系，判断a是否包含b/*  * 判断两个数组的包含关系，判断a是否包含b  * 期望输入： a=[1,2,3,5], b=[2,3]  * 期望输出：布尔值Boolean */  const compareArr = (a,b) =&gt; {     if (b.leng...",
    "custom_description": "判断两个数组的包含关系，判断a是否包含b；剔除数组中重复的元素；从JSON或数组中提取数组",
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1346477,
    "slug": "number",
    "title": "数字格式化",
    "book_id": 232944,
    "book": {
      "id": 232944,
      "type": "Book",
      "slug": "gists",
      "name": "web代码片段",
      "user_id": 285760,
      "description": "前端开发中的代码片段分享",
      "creator_id": 285760,
      "public": 1,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-03-12T07:56:31.925Z",
      "updated_at": "2019-03-12T07:56:31.000Z",
      "created_at": "2019-03-09T05:10:11.000Z",
      "namespace": "nooldey/gists",
      "user": {
        "id": 285760,
        "type": "User",
        "login": "nooldey",
        "name": "nooldey",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 3,
        "public_books_count": 2,
        "followers_count": 1,
        "following_count": 1,
        "created_at": "2019-03-09T04:49:17.000Z",
        "updated_at": "2019-03-09T05:55:10.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 285760,
    "creator": {
      "id": 285760,
      "type": "User",
      "login": "nooldey",
      "name": "nooldey",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 3,
      "public_books_count": 2,
      "followers_count": 1,
      "following_count": 1,
      "created_at": "2019-03-09T04:49:17.000Z",
      "updated_at": "2019-03-09T05:55:10.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"dc6609d8\"></a>\n## **将输入格式化为带2位小数**\n```javascript\n/*\n    期望输入： 123.321等任意数字串\n    期望输出：123.45带两位小数的浮点数或整数\n*/\n\nfixVal(e) {\n    let v = e.trim();\n    v = v && v.match(/\\d+(\\.\\d+)?/)[0]\n    const n = (!v || isNaN(v) || v==0) ? 0 : Math.abs(parseFloat(v).toFixed(2));\n    return n\n}\n```\n\n",
    "body_draft": "",
    "body_html": "<h2 id=\"dc6609d8\"><strong>将输入格式化为带2位小数</strong></h2><pre data-lang=\"javascript\"><code>/*\n    期望输入： 123.321等任意数字串\n    期望输出：123.45带两位小数的浮点数或整数\n*/\n\nfixVal(e) {\n    let v = e.trim();\n    v = v &amp;&amp; v.match(/\\d+(\\.\\d+)?/)[0]\n    const n = (!v || isNaN(v) || v==0) ? 0 : Math.abs(parseFloat(v).toFixed(2));\n    return n\n}</code></pre><p><br /></p>",
    "body_lake": "<!doctype lake><h2 id=\"dc6609d8\"><strong>将输入格式化为带2位小数</strong></h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F*%5Cn%20%20%20%20%E6%9C%9F%E6%9C%9B%E8%BE%93%E5%85%A5%EF%BC%9A%20123.321%E7%AD%89%E4%BB%BB%E6%84%8F%E6%95%B0%E5%AD%97%E4%B8%B2%5Cn%20%20%20%20%E6%9C%9F%E6%9C%9B%E8%BE%93%E5%87%BA%EF%BC%9A123.45%E5%B8%A6%E4%B8%A4%E4%BD%8D%E5%B0%8F%E6%95%B0%E7%9A%84%E6%B5%AE%E7%82%B9%E6%95%B0%E6%88%96%E6%95%B4%E6%95%B0%5Cn*%2F%5Cn%5CnfixVal(e)%20%7B%5Cn%20%20%20%20let%20v%20%3D%20e.trim()%3B%5Cn%20%20%20%20v%20%3D%20v%20%26%26%20v.match(%2F%5C%5Cd%2B(%5C%5C.%5C%5Cd%2B)%3F%2F)%5B0%5D%5Cn%20%20%20%20const%20n%20%3D%20(!v%20%7C%7C%20isNaN(v)%20%7C%7C%20v%3D%3D0)%20%3F%200%20%3A%20Math.abs(parseFloat(v).toFixed(2))%3B%5Cn%20%20%20%20return%20n%5Cn%7D%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-09T05:46:26.000Z",
    "deleted_at": null,
    "created_at": "2019-03-09T05:16:41.000Z",
    "updated_at": "2019-03-09T05:46:26.000Z",
    "published_at": "2019-03-09T05:46:26.000Z",
    "first_published_at": "2019-03-09T05:17:18.000Z",
    "word_count": 75,
    "cover": "",
    "description": "将输入格式化为带2位小数/*     期望输入： 123.321等任意数字串     期望输出：123.45带两位小数的浮点数或整数 */  fixVal(e) {     let v = e.trim();     v = v &amp;&amp; v.match(/\\d+(\\.\\d+)?/...",
    "custom_description": "将输入格式化为带2位小数",
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1346473,
    "slug": "date",
    "title": "日期格式化",
    "book_id": 232944,
    "book": {
      "id": 232944,
      "type": "Book",
      "slug": "gists",
      "name": "web代码片段",
      "user_id": 285760,
      "description": "前端开发中的代码片段分享",
      "creator_id": 285760,
      "public": 1,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-03-12T07:56:31.925Z",
      "updated_at": "2019-03-12T07:56:31.000Z",
      "created_at": "2019-03-09T05:10:11.000Z",
      "namespace": "nooldey/gists",
      "user": {
        "id": 285760,
        "type": "User",
        "login": "nooldey",
        "name": "nooldey",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 3,
        "public_books_count": 2,
        "followers_count": 1,
        "following_count": 1,
        "created_at": "2019-03-09T04:49:17.000Z",
        "updated_at": "2019-03-09T05:55:10.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 285760,
    "creator": {
      "id": 285760,
      "type": "User",
      "login": "nooldey",
      "name": "nooldey",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 3,
      "public_books_count": 2,
      "followers_count": 1,
      "following_count": 1,
      "created_at": "2019-03-09T04:49:17.000Z",
      "updated_at": "2019-03-09T05:55:10.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"606aca26\"></a>\n## 时间格式化\n```javascript\nconst timeFormat = (stamp, format='yyyy-MM-dd') => {\n    /* 时间格式化 */\n    let d = new Date(stamp);\n    let year = d.getFullYear(),\n        month = d.getMonth()+1,\n        date = d.getDate(),\n        hour = d.getHours(),\n        min = d.getMinutes(),\n        sec = d.getSeconds();\n    let output = '';\n    switch (format) {\n        case 'yyyy-MM-dd':\n            output = [year,month,date].join('-');\n            break;\n        default:\n            output = [year,month,date].join('-')+' '+[hour,min].join(':');\n            break;\n    }\n    return output;\n}\n```\n\n<a name=\"a7bfb8a8\"></a>\n## **将零时区转化为当地时间**\n```javascript\n/* 依赖时间格式化函数 */\n\nconst zeroToLocal = (stamp, format='yyyy-MM-dd') => {\n    /* 将传入的零时区的时间转化为当地时间显示 */\n    /*\n     * 参数：\n     * offset: 当前时区时间差 = 零时区时间-当地时间 单位：min\n     *       eg: 中国时区+0800 时间差为-480(min),-480/60 = -8小时\n     * localtime: 转换后输出的当地时间\n    */\n    if (!stamp) return;\n    let d = new Date(stamp);\n    if (!d) return stamp;\n    let offset = new Date().getTimezoneOffset();\n    let localtime = d.getTime() - offset*60*1000;\n    let output = timeFormat(localtime,format);\n    return output;\n}\n```\n\n<a name=\"38c57d19\"></a>\n## **将当地时间转化为零时区时间**\n```javascript\nconst localToZero = (stamp, format='yyyy-MM-dd') => {\n    /* 将当地时间转化为零时区时间 */\n    /*\n     * 参数：\n     * offset: 当前时区时间差 = 零时区时间-当地时间 单位：min\n     *       eg: 中国时区+0800 时间差为-480(min),-480/60 = -8小时\n     * zeroTime: 转换后输出的当地时间\n    */\n    if (!stamp) return;\n    let d = new Date(stamp).toJSON().substr(0, 19);\n    let [date,time] = d.split('T');\n    let [year,month,day] = date.split('-');\n    let [hour,min,sec] = time.split(':');\n    let output = '';\n    switch (format) {\n        case 'yyyy-MM-dd':\n            output = [year,month,date].join('-');\n            break;\n        default:\n            output = [year,month,date].join('-')+' '+[hour,min].join(':');\n            break;\n    }\n    return output;\n}\n```\n\n",
    "body_draft": "",
    "body_html": "<h2 id=\"606aca26\">时间格式化</h2><pre data-lang=\"javascript\"><code>const timeFormat = (stamp, format='yyyy-MM-dd') =&gt; {\n    /* 时间格式化 */\n    let d = new Date(stamp);\n    let year = d.getFullYear(),\n        month = d.getMonth()+1,\n        date = d.getDate(),\n        hour = d.getHours(),\n        min = d.getMinutes(),\n        sec = d.getSeconds();\n    let output = '';\n    switch (format) {\n        case 'yyyy-MM-dd':\n            output = [year,month,date].join('-');\n            break;\n        default:\n            output = [year,month,date].join('-')+' '+[hour,min].join(':');\n            break;\n    }\n    return output;\n}</code></pre><p><br /></p><h2 id=\"a7bfb8a8\"><strong>将零时区转化为当地时间</strong></h2><pre data-lang=\"javascript\"><code>/* 依赖时间格式化函数 */\n\nconst zeroToLocal = (stamp, format='yyyy-MM-dd') =&gt; {\n    /* 将传入的零时区的时间转化为当地时间显示 */\n    /*\n     * 参数：\n     * offset: 当前时区时间差 = 零时区时间-当地时间 单位：min\n     *       eg: 中国时区+0800 时间差为-480(min),-480/60 = -8小时\n     * localtime: 转换后输出的当地时间\n    */\n    if (!stamp) return;\n    let d = new Date(stamp);\n    if (!d) return stamp;\n    let offset = new Date().getTimezoneOffset();\n    let localtime = d.getTime() - offset*60*1000;\n    let output = timeFormat(localtime,format);\n    return output;\n}</code></pre><p><br /></p><h2 id=\"38c57d19\"><strong>将当地时间转化为零时区时间</strong></h2><pre data-lang=\"javascript\"><code>const localToZero = (stamp, format='yyyy-MM-dd') =&gt; {\n    /* 将当地时间转化为零时区时间 */\n    /*\n     * 参数：\n     * offset: 当前时区时间差 = 零时区时间-当地时间 单位：min\n     *       eg: 中国时区+0800 时间差为-480(min),-480/60 = -8小时\n     * zeroTime: 转换后输出的当地时间\n    */\n    if (!stamp) return;\n    let d = new Date(stamp).toJSON().substr(0, 19);\n    let [date,time] = d.split('T');\n    let [year,month,day] = date.split('-');\n    let [hour,min,sec] = time.split(':');\n    let output = '';\n    switch (format) {\n        case 'yyyy-MM-dd':\n            output = [year,month,date].join('-');\n            break;\n        default:\n            output = [year,month,date].join('-')+' '+[hour,min].join(':');\n            break;\n    }\n    return output;\n}</code></pre><p><br /></p>",
    "body_lake": "<!doctype lake><h2 id=\"606aca26\">时间格式化</h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20timeFormat%20%3D%20(stamp%2C%20format%3D'yyyy-MM-dd')%20%3D%3E%20%7B%5Cn%20%20%20%20%2F*%20%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96%20*%2F%5Cn%20%20%20%20let%20d%20%3D%20new%20Date(stamp)%3B%5Cn%20%20%20%20let%20year%20%3D%20d.getFullYear()%2C%5Cn%20%20%20%20%20%20%20%20month%20%3D%20d.getMonth()%2B1%2C%5Cn%20%20%20%20%20%20%20%20date%20%3D%20d.getDate()%2C%5Cn%20%20%20%20%20%20%20%20hour%20%3D%20d.getHours()%2C%5Cn%20%20%20%20%20%20%20%20min%20%3D%20d.getMinutes()%2C%5Cn%20%20%20%20%20%20%20%20sec%20%3D%20d.getSeconds()%3B%5Cn%20%20%20%20let%20output%20%3D%20''%3B%5Cn%20%20%20%20switch%20(format)%20%7B%5Cn%20%20%20%20%20%20%20%20case%20'yyyy-MM-dd'%3A%5Cn%20%20%20%20%20%20%20%20%20%20%20%20output%20%3D%20%5Byear%2Cmonth%2Cdate%5D.join('-')%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20break%3B%5Cn%20%20%20%20%20%20%20%20default%3A%5Cn%20%20%20%20%20%20%20%20%20%20%20%20output%20%3D%20%5Byear%2Cmonth%2Cdate%5D.join('-')%2B'%20'%2B%5Bhour%2Cmin%5D.join('%3A')%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20break%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20output%3B%5Cn%7D%22%7D\"></card><p><br /></p><h2 id=\"a7bfb8a8\"><strong>将零时区转化为当地时间<cursor /></strong></h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F*%20%E4%BE%9D%E8%B5%96%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%87%BD%E6%95%B0%20*%2F%5Cn%5Cnconst%20zeroToLocal%20%3D%20(stamp%2C%20format%3D'yyyy-MM-dd')%20%3D%3E%20%7B%5Cn%20%20%20%20%2F*%20%E5%B0%86%E4%BC%A0%E5%85%A5%E7%9A%84%E9%9B%B6%E6%97%B6%E5%8C%BA%E7%9A%84%E6%97%B6%E9%97%B4%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%BD%93%E5%9C%B0%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA%20*%2F%5Cn%20%20%20%20%2F*%5Cn%20%20%20%20%20*%20%E5%8F%82%E6%95%B0%EF%BC%9A%5Cn%20%20%20%20%20*%20offset%3A%20%E5%BD%93%E5%89%8D%E6%97%B6%E5%8C%BA%E6%97%B6%E9%97%B4%E5%B7%AE%20%3D%20%E9%9B%B6%E6%97%B6%E5%8C%BA%E6%97%B6%E9%97%B4-%E5%BD%93%E5%9C%B0%E6%97%B6%E9%97%B4%20%E5%8D%95%E4%BD%8D%EF%BC%9Amin%5Cn%20%20%20%20%20*%20%20%20%20%20%20%20eg%3A%20%E4%B8%AD%E5%9B%BD%E6%97%B6%E5%8C%BA%2B0800%20%E6%97%B6%E9%97%B4%E5%B7%AE%E4%B8%BA-480(min)%2C-480%2F60%20%3D%20-8%E5%B0%8F%E6%97%B6%5Cn%20%20%20%20%20*%20localtime%3A%20%E8%BD%AC%E6%8D%A2%E5%90%8E%E8%BE%93%E5%87%BA%E7%9A%84%E5%BD%93%E5%9C%B0%E6%97%B6%E9%97%B4%5Cn%20%20%20%20*%2F%5Cn%20%20%20%20if%20(!stamp)%20return%3B%5Cn%20%20%20%20let%20d%20%3D%20new%20Date(stamp)%3B%5Cn%20%20%20%20if%20(!d)%20return%20stamp%3B%5Cn%20%20%20%20let%20offset%20%3D%20new%20Date().getTimezoneOffset()%3B%5Cn%20%20%20%20let%20localtime%20%3D%20d.getTime()%20-%20offset*60*1000%3B%5Cn%20%20%20%20let%20output%20%3D%20timeFormat(localtime%2Cformat)%3B%5Cn%20%20%20%20return%20output%3B%5Cn%7D%22%7D\"></card><p><br /></p><h2 id=\"38c57d19\"><strong>将当地时间转化为零时区时间</strong></h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20localToZero%20%3D%20(stamp%2C%20format%3D'yyyy-MM-dd')%20%3D%3E%20%7B%5Cn%20%20%20%20%2F*%20%E5%B0%86%E5%BD%93%E5%9C%B0%E6%97%B6%E9%97%B4%E8%BD%AC%E5%8C%96%E4%B8%BA%E9%9B%B6%E6%97%B6%E5%8C%BA%E6%97%B6%E9%97%B4%20*%2F%5Cn%20%20%20%20%2F*%5Cn%20%20%20%20%20*%20%E5%8F%82%E6%95%B0%EF%BC%9A%5Cn%20%20%20%20%20*%20offset%3A%20%E5%BD%93%E5%89%8D%E6%97%B6%E5%8C%BA%E6%97%B6%E9%97%B4%E5%B7%AE%20%3D%20%E9%9B%B6%E6%97%B6%E5%8C%BA%E6%97%B6%E9%97%B4-%E5%BD%93%E5%9C%B0%E6%97%B6%E9%97%B4%20%E5%8D%95%E4%BD%8D%EF%BC%9Amin%5Cn%20%20%20%20%20*%20%20%20%20%20%20%20eg%3A%20%E4%B8%AD%E5%9B%BD%E6%97%B6%E5%8C%BA%2B0800%20%E6%97%B6%E9%97%B4%E5%B7%AE%E4%B8%BA-480(min)%2C-480%2F60%20%3D%20-8%E5%B0%8F%E6%97%B6%5Cn%20%20%20%20%20*%20zeroTime%3A%20%E8%BD%AC%E6%8D%A2%E5%90%8E%E8%BE%93%E5%87%BA%E7%9A%84%E5%BD%93%E5%9C%B0%E6%97%B6%E9%97%B4%5Cn%20%20%20%20*%2F%5Cn%20%20%20%20if%20(!stamp)%20return%3B%5Cn%20%20%20%20let%20d%20%3D%20new%20Date(stamp).toJSON().substr(0%2C%2019)%3B%5Cn%20%20%20%20let%20%5Bdate%2Ctime%5D%20%3D%20d.split('T')%3B%5Cn%20%20%20%20let%20%5Byear%2Cmonth%2Cday%5D%20%3D%20date.split('-')%3B%5Cn%20%20%20%20let%20%5Bhour%2Cmin%2Csec%5D%20%3D%20time.split('%3A')%3B%5Cn%20%20%20%20let%20output%20%3D%20''%3B%5Cn%20%20%20%20switch%20(format)%20%7B%5Cn%20%20%20%20%20%20%20%20case%20'yyyy-MM-dd'%3A%5Cn%20%20%20%20%20%20%20%20%20%20%20%20output%20%3D%20%5Byear%2Cmonth%2Cdate%5D.join('-')%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20break%3B%5Cn%20%20%20%20%20%20%20%20default%3A%5Cn%20%20%20%20%20%20%20%20%20%20%20%20output%20%3D%20%5Byear%2Cmonth%2Cdate%5D.join('-')%2B'%20'%2B%5Bhour%2Cmin%5D.join('%3A')%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20break%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20output%3B%5Cn%7D%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-09T05:47:18.000Z",
    "deleted_at": null,
    "created_at": "2019-03-09T05:13:33.000Z",
    "updated_at": "2019-03-09T05:47:18.000Z",
    "published_at": "2019-03-09T05:47:18.000Z",
    "first_published_at": "2019-03-09T05:15:40.000Z",
    "word_count": 372,
    "cover": "",
    "description": "时间格式化const timeFormat = (stamp, format='yyyy-MM-dd') =&gt; {     /* 时间格式化 */     let d = new Date(stamp);     let year = d.getFullYear(),         m...",
    "custom_description": "时间格式化；将零时区转化为当地时间；将当地时间转化为零时区时间；",
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 1346469,
    "slug": "char",
    "title": "英文格式化",
    "book_id": 232944,
    "book": {
      "id": 232944,
      "type": "Book",
      "slug": "gists",
      "name": "web代码片段",
      "user_id": 285760,
      "description": "前端开发中的代码片段分享",
      "creator_id": 285760,
      "public": 1,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2019-03-12T07:56:31.925Z",
      "updated_at": "2019-03-12T07:56:31.000Z",
      "created_at": "2019-03-09T05:10:11.000Z",
      "namespace": "nooldey/gists",
      "user": {
        "id": 285760,
        "type": "User",
        "login": "nooldey",
        "name": "nooldey",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
        "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
        "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
        "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
        "books_count": 3,
        "public_books_count": 2,
        "followers_count": 1,
        "following_count": 1,
        "created_at": "2019-03-09T04:49:17.000Z",
        "updated_at": "2019-03-09T05:55:10.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 285760,
    "creator": {
      "id": 285760,
      "type": "User",
      "login": "nooldey",
      "name": "nooldey",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg",
      "large_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_320,h_320",
      "medium_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_160,h_160",
      "small_avatar_url": "https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1552106902668-b9acf677-734e-4e7a-ac1f-681a58e57f9d.jpeg?x-oss-process=image/resize,m_fill,w_80,h_80",
      "books_count": 3,
      "public_books_count": 2,
      "followers_count": 1,
      "following_count": 1,
      "created_at": "2019-03-09T04:49:17.000Z",
      "updated_at": "2019-03-09T05:55:10.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"24ef528e\"></a>\n## 首字母大写\n\n```javascript\nconst hump = char => {\n    /* 首字母大写 */\n    if (!char) return;\n    if (!(/^\\w+$/).test(char)) return char;\n    char = char.toLowerCase();\n    let cs = char.split('');\n    cs[0] = cs[0].toString().toUpperCase();\n    return cs.join('');\n}\n```\n\n<a name=\"e0e1b542\"></a>\n## 将下划线格式改为驼峰格式\n```javascript\nconst toHump = char => {\n    /* 将下划线格式改为驼峰格式 */\n    /* eg: Demang_ddd => Demang Ddd */\n    if (!char) return;\n    if (!(/^\\w+_\\w+$/).test(char)) return char;\n    let cs = [];\n    const chars = char.split('_');\n    chars.forEach(item => {\n        cs.push(hump(item))\n    })\n    return cs.join(' ');\n}\n```\n\n",
    "body_draft": "",
    "body_html": "<h2 id=\"24ef528e\">首字母大写</h2><p><br /></p><pre data-lang=\"javascript\"><code>const hump = char =&gt; {\n    /* 首字母大写 */\n    if (!char) return;\n    if (!(/^\\w+$/).test(char)) return char;\n    char = char.toLowerCase();\n    let cs = char.split('');\n    cs[0] = cs[0].toString().toUpperCase();\n    return cs.join('');\n}</code></pre><p><br /></p><h2 id=\"e0e1b542\">将下划线格式改为驼峰格式</h2><pre data-lang=\"javascript\"><code>const toHump = char =&gt; {\n    /* 将下划线格式改为驼峰格式 */\n    /* eg: Demang_ddd =&gt; Demang Ddd */\n    if (!char) return;\n    if (!(/^\\w+_\\w+$/).test(char)) return char;\n    let cs = [];\n    const chars = char.split('_');\n    chars.forEach(item =&gt; {\n        cs.push(hump(item))\n    })\n    return cs.join(' ');\n}</code></pre><p><br /></p>",
    "body_lake": "<!doctype lake><h2 id=\"24ef528e\">首字母大写</h2><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20hump%20%3D%20char%20%3D%3E%20%7B%5Cn%20%20%20%20%2F*%20%E9%A6%96%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99%20*%2F%5Cn%20%20%20%20if%20(!char)%20return%3B%5Cn%20%20%20%20if%20(!(%2F%5E%5C%5Cw%2B%24%2F).test(char))%20return%20char%3B%5Cn%20%20%20%20char%20%3D%20char.toLowerCase()%3B%5Cn%20%20%20%20let%20cs%20%3D%20char.split('')%3B%5Cn%20%20%20%20cs%5B0%5D%20%3D%20cs%5B0%5D.toString().toUpperCase()%3B%5Cn%20%20%20%20return%20cs.join('')%3B%5Cn%7D%22%7D\"></card><p><br /></p><h2 id=\"e0e1b542\"><anchor />将下划线格式改为驼峰格式<focus /></h2><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20toHump%20%3D%20char%20%3D%3E%20%7B%5Cn%20%20%20%20%2F*%20%E5%B0%86%E4%B8%8B%E5%88%92%E7%BA%BF%E6%A0%BC%E5%BC%8F%E6%94%B9%E4%B8%BA%E9%A9%BC%E5%B3%B0%E6%A0%BC%E5%BC%8F%20*%2F%5Cn%20%20%20%20%2F*%20eg%3A%20Demang_ddd%20%3D%3E%20Demang%20Ddd%20*%2F%5Cn%20%20%20%20if%20(!char)%20return%3B%5Cn%20%20%20%20if%20(!(%2F%5E%5C%5Cw%2B_%5C%5Cw%2B%24%2F).test(char))%20return%20char%3B%5Cn%20%20%20%20let%20cs%20%3D%20%5B%5D%3B%5Cn%20%20%20%20const%20chars%20%3D%20char.split('_')%3B%5Cn%20%20%20%20chars.forEach(item%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20cs.push(hump(item))%5Cn%20%20%20%20%7D)%5Cn%20%20%20%20return%20cs.join('%20')%3B%5Cn%7D%22%7D\"></card><p><br /></p>",
    "public": 1,
    "status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-03-09T05:47:45.000Z",
    "deleted_at": null,
    "created_at": "2019-03-09T05:10:14.000Z",
    "updated_at": "2019-03-09T05:47:45.000Z",
    "published_at": "2019-03-09T05:47:45.000Z",
    "first_published_at": "2019-03-09T05:11:09.000Z",
    "word_count": 113,
    "cover": "",
    "description": "首字母大写const hump = char =&gt; {     /* 首字母大写 */     if (!char) return;     if (!(/^\\w+$/).test(char)) return char;     char = char.toLowerCase();   ...",
    "custom_description": "首字母大写；将下划线格式改为驼峰格式",
    "_serializer": "v2.doc_detail"
  }
]